***********************************************************************
CLONING REPOSITORIES
***********************************************************************









500068392@upes-500068392 MINGW64 ~
$ cd e:

500068392@upes-500068392 MINGW64 /e
$ cd SK

500068392@upes-500068392 MINGW64 /e/SK (master|MERGING)
$ cd ..

500068392@upes-500068392 MINGW64 /e
$ mkdir SK1
                                                                    // creating a local directory
500068392@upes-500068392 MINGW64 /e
$ cd SK1

500068392@upes-500068392 MINGW64 /e/SK1
$ git clone https://github.com/shashwat9kumar/SK                     // cloning my own remote repository(SK) into my local directory(SK1)
Cloning into 'SK'...
remote: Enumerating objects: 29, done.
remote: Counting objects: 100% (29/29), done.
remote: Compressing objects: 100% (20/20), done.
remote: Total 29 (delta 7), reused 18 (delta 3), pack-reused 0
Unpacking objects: 100% (29/29), done.


500068392@upes-500068392 MINGW64 /e/SK1
$ ls                                                          // The contents of folder SK1 shows the cloned repository SK
SK/

500068392@upes-500068392 MINGW64 /e/SK1
$ cd SK                                                // moving into the cloned repository

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ ls
f1.txt  f2.txt  f3.txt  f4.txt  f5.txt  LogsForReference.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git remote -v                                            // git clone clones all the commits, changes, and modifications. 
origin  https://github.com/shashwat9kumar/SK (fetch)       // git remote -v shows that the origin exists 
origin  https://github.com/shashwat9kumar/SK (push)

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ vi LogsForRefernceAgain.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git add .

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git commit -m" Logs to be added for clone and reset"
[master 2acdf27]  Logs to be added for clone and reset
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 LogsForRefernceAgain.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git push origin master                                // The content can be pushed as it is my own repository.Had it not been my own repository I could have made commits in the local machine but not be able to pus them.
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 319 bytes | 159.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/shashwat9kumar/SK
   dd40dc5..2acdf27  master -> master

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ cd ..

500068392@upes-500068392 MINGW64 /e/SK1
$ git clone https://github.com/shivnai/17march19       // Cloning Shivani Tyagi's repository
Cloning into '17march19'...
remote: Enumerating objects: 9, done.
remote: Counting objects: 100% (9/9), done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 9 (delta 1), reused 8 (delta 0), pack-reused 0
Unpacking objects: 100% (9/9), done.

500068392@upes-500068392 MINGW64 /e/SK1
$ ls
17march19/  SK/                                            // ls showing both of the cloned repositories

500068392@upes-500068392 MINGW64 /e/SK1
$ cd 17march19                                             // moving into the downloaded(cloned) repository

500068392@upes-500068392 MINGW64 /e/SK1/17march19 (master)
$ ls
17march.txt  17march2.c  17march3.txt

500068392@upes-500068392 MINGW64 /e/SK1/17march19 (master)
$ vi file.txt

500068392@upes-500068392 MINGW64 /e/SK1/17march19 (master)
$ git add .

500068392@upes-500068392 MINGW64 /e/SK1/17march19 (master)
$ git commit -m "Done by Shashwat Kumar"                             // making commits in my local machine to the cloned repository of Shivani Tyagi
[master 34999bc] Done by Shashwat Kumar
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 file.txt

500068392@upes-500068392 MINGW64 /e/SK1/17march19 (master)
$ git remote -v
origin  https://github.com/shivnai/17march19 (fetch)
origin  https://github.com/shivnai/17march19 (push)

500068392@upes-500068392 MINGW64 /e/SK1/17march19 (master)
$ git push origin master                                                                  // cannot do a push operation on a cloned repository (unless you clone your own repository)
remote: Permission to shivnai/17march19.git denied to shashwat9kumar.
fatal: unable to access 'https://github.com/shivnai/17march19/': The requested URL returned error: 403

500068392@upes-500068392 MINGW64 /e/SK1/17march19 (master)
$



















**************************************************************************************
USING GIT RESET COMMAND WITH --soft --hard AND --mixed VARIANTS
**************************************************************************************












500068392@upes-500068392 MINGW64 /e/SK1/SK (master)                // making 4 commits ( commit 1: f1 and f2 changed | commit 2: f2 and f3 changed | commit 3: f3 and f4 changed | commit 4: f4 and f5 changed )
$ vi f1.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ vi f2.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git add .

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git commit -m "commit 1"
[master 8f0af87] commit 1
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 8 insertions(+)

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git push origin master
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 395 bytes | 79.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/shashwat9kumar/SK.git
   47acf08..8f0af87  master -> master

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ vi f2.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ vi f3.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git add .

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git commit -m "commit 2"
[master f80e3f6] commit 2
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 6 insertions(+)

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git push origin master
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 394 bytes | 78.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/shashwat9kumar/SK.git
   8f0af87..f80e3f6  master -> master

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ vi f3.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ vi f4.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git add .

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git commit -m "commit 3"
[master 5950f6b] commit 3
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 7 insertions(+)

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git push origin master
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 400 bytes | 80.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/shashwat9kumar/SK.git
   f80e3f6..5950f6b  master -> master

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ vi f4.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ vi f5.txt

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git add .

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git commit -m "commit 4"
[master c508d43] commit 4
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 7 insertions(+)

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git push origin master
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 438 bytes | 219.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/shashwat9kumar/SK.git                                           
   5950f6b..c508d43  master -> master

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git log --oneline
c508d43 (HEAD -> master, origin/master) commit 4                          //4 commits done
5950f6b commit 3
f80e3f6 commit 2
8f0af87 commit 1
47acf08  Log added for clone
2acdf27  Logs to be added for clone and reset
dd40dc5 log files added
480e02c Changes made, now time to fetch
057f2fa commiting to fetch(fetch command used here)
95acbee changed the file f4.txt
27ccaef commiting
0d29819 Test commit 2(to check if git pushes multiple commits)
43b05cc Test commit 1(to check if git pushes multiple commits)
b9d8db8 Changes done to fx.xls and f2.txt but git pushes only f2.txt
774c6e6 Commiting the unignored files
a880e91 Ignoring files

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ cat f5.txt                                                 // this is content of file f5.txt
The file has been edited
Now going to fetch it from the remote repository




This is commit 4


500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git reset --soft HEAD~1                                   // Using the --soft variant(This command only moves the HEAD pointer, but does not unstage and does not over-write the file)

500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git status                                                // file not unstaged
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   f4.txt
        modified:   f5.txt                                  //shown in green


500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ cat f5.txt
The file has been edited                                     //file's content not ovwe-written
Now going to fetch it from the remote repository




This is commit 4


500068392@upes-500068392 MINGW64 /e/SK1/SK (master)
$ git pull origin master                                     // using git pull to move back to "commit 4"
From https://github.com/shashwat9kumar/SK
 * branch            master     -> FETCH_HEAD
Updating 5950f6b..c508d43
Fast-forward
 f4.txt | 1 +
 f5.txt | 6 ++++++
 2 files changed, 7 insertions(+)

500068392@upes-500068392 MINGW64 /e/SK1/SK/SK (master)
$ git log --oneline
c508d43 (HEAD -> master, origin/master, origin/HEAD) commit 4             //gone back to commit 4
5950f6b commit 3
f80e3f6 commit 2
8f0af87 commit 1
47acf08  Log added for clone
2acdf27  Logs to be added for clone and reset
dd40dc5 log files added
480e02c Changes made, now time to fetch
057f2fa commiting to fetch(fetch command used here)
95acbee changed the file f4.txt
27ccaef commiting
0d29819 Test commit 2(to check if git pushes multiple commits)
43b05cc Test commit 1(to check if git pushes multiple commits)
b9d8db8 Changes done to fx.xls and f2.txt but git pushes only f2.txt
774c6e6 Commiting the unignored files
a880e91 Ignoring files

500068392@upes-500068392 MINGW64 /e/SK1/SK/SK (master)
$ git reset --hard HEAD~1                                                  // Using the --soft variant(This command only moves the HEAD pointer, unstages the files and over-writes the content of file)
HEAD is now at 5950f6b commit 3

500068392@upes-500068392 MINGW64 /e/SK1/SK/SK (master)
$ git status                                                                 
On branch master
Your branch is behind 'origin/master' by 1 commit, and can be fast-forwarded.
  (use "git pull" to update your local branch)

nothing to commit, working tree clean

500068392@upes-500068392 MINGW64 /e/SK1/SK/SK (master)
$ cat f5.txt
The file has been edited                                            //contents of files over-written
Now going to fetch it from the remote repository

500068392@upes-500068392 MINGW64 /e/SK1/SK/SK (master)
$ git pull origin master                                             // using git pull to move back to "commit 4"
From https://github.com/shashwat9kumar/SK
 * branch            master     -> FETCH_HEAD
Updating 5950f6b..c508d43
Fast-forward
 f4.txt | 1 +
 f5.txt | 6 ++++++
 2 files changed, 7 insertions(+)

500068392@upes-500068392 MINGW64 /e/SK1/SK/SK (master)
$ git log --oneline
c508d43 (HEAD -> master, origin/master, origin/HEAD) commit 4             //gone back to commit 4
5950f6b commit 3
f80e3f6 commit 2
8f0af87 commit 1
47acf08  Log added for clone
2acdf27  Logs to be added for clone and reset
dd40dc5 log files added
480e02c Changes made, now time to fetch
057f2fa commiting to fetch(fetch command used here)
95acbee changed the file f4.txt
27ccaef commiting
0d29819 Test commit 2(to check if git pushes multiple commits)
43b05cc Test commit 1(to check if git pushes multiple commits)
b9d8db8 Changes done to fx.xls and f2.txt but git pushes only f2.txt
774c6e6 Commiting the unignored files
a880e91 Ignoring files

500068392@upes-500068392 MINGW64 /e/SK1/SK/SK (master)
$ git reset --mixed HEAD~1
Unstaged changes after reset:                                                  // Using the --soft variant(This command only moves the HEAD pointer, unstages the files BUT does not over-writes the content of file)
M       f4.txt   
M       f5.txt                                                                 // files unstaged

500068392@upes-500068392 MINGW64 /e/SK1/SK/SK (master)
$ cat f5.txt
The file has been edited
Now going to fetch it from the remote repository
                                                                                // contents of file not over-written



This is commit 4


500068392@upes-500068392 MINGW64 /e/SK1/SK/SK (master)
$ git status
On branch master
Your branch is behind 'origin/master' by 1 commit, and can be fast-forwarded.
  (use "git pull" to update your local branch)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   f4.txt
        modified:   f5.txt

no changes added to commit (use "git add" and/or "git commit -a")

500068392@upes-500068392 MINGW64 /e/SK1/SK/SK (master)
$
