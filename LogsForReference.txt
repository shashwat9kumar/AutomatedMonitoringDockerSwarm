500068392@upes-500068392 MINGW64 ~
$ cd e:

500068392@upes-500068392 MINGW64 /e
$ mkdir SK

500068392@upes-500068392 MINGW64 /e
$ cd SK

500068392@upes-500068392 MINGW64 /e/SK
$ touch f1.txt

500068392@upes-500068392 MINGW64 /e/SK
$ touch f2.txt

500068392@upes-500068392 MINGW64 /e/SK
$ touch f3.txt

500068392@upes-500068392 MINGW64 /e/SK
$ touch fc.cpp

500068392@upes-500068392 MINGW64 /e/SK
$ fx.xlx
bash: fx.xlx: command not found

500068392@upes-500068392 MINGW64 /e/SK
$ touch fx.xls

500068392@upes-500068392 MINGW64 /e/SK
$ touch fp.ppt





*********************************************************************************
HOW TO USE .gitignore FILE
*********************************************************************************


 




500068392@upes-500068392 MINGW64 /e/SK
$ vi .gitignore                                //Initialised a .gitignore file (written:
                                                                                          *.cpp
                                                                                          *.xls
                                                                                          *.ppt)

500068392@upes-500068392 MINGW64 /e/SK
$ git init
Initialized empty Git repository in E:/SK/.git/

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git add .gitignore                                  // staging the .gitignore file(not doing this will cause this file to cease to show its effects)
warning: LF will be replaced by CRLF in .gitignore.
The file will have its original line endings in your working directory

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   .gitignore

Untracked files:
  (use "git add <file>..." to include in what will be committed)              //as the gitignore file was added the git status shows only 3 files (f1.txt, f2.txt, f3.txt and not fc.cpp, fp.ppt and fx.xls)

        f1.txt
        f2.txt
        f3.txt


500068392@upes-500068392 MINGW64 /e/SK (master)
$ git commit -m"Ignoring files"
[master (root-commit) a880e91] Ignoring files
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 4 insertions(+)
 create mode 100644 .gitignore

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git remote add origin https://github.com/shashwat9kumar/SK.git

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git push origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 249 bytes | 124.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/shashwat9kumar/SK.git
 * [new branch]      master -> master

500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi fc.cpp                                            // changes done to fc.cpp, fp.ppt and f1.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi fp.ppt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi f1.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git add .                                              // trying to add all files but result shows the staging of only f1.txt(fc.cpp and fp.ppt are ignored)
warning: LF will be replaced by CRLF in f1.txt.
The file will have its original line endings in your working directory

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   f1.txt
        new file:   f2.txt
        new file:   f3.txt


500068392@upes-500068392 MINGW64 /e/SK (master)
$ git commit -m "Commiting the unignored files"
[master 774c6e6] Commiting the unignored files
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 3 files changed, 2 insertions(+)
 create mode 100644 f1.txt
 create mode 100644 f2.txt
 create mode 100644 f3.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git push origin master
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 372 bytes | 53.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0)
To https://github.com/shashwat9kumar/SK.git
   a880e91..774c6e6  master -> master

500068392@upes-500068392 MINGW64 /e/SK (master)
$ cat fp.ppt
WELCOME


500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi fx.xls                                                          // changes done to fx.xls and f2.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi f2.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git add .                                                           //but only f2.txt is staged // fx.xls is ignored
warning: LF will be replaced by CRLF in f2.txt.
The file will have its original line endings in your working directory

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git commit -m "Changes done to fx.xls and f2.txt but git pushes only f2.txt"
[master b9d8db8] Changes done to fx.xls and f2.txt but git pushes only f2.txt
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 2 insertions(+)

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git push origin master
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 334 bytes | 167.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/shashwat9kumar/SK.git
   774c6e6..b9d8db8  master -> master






*************************************************************************************
THE FOLLOWING IS DONE TO SEE IF GIT CAN PUSH MULTIPLE COMMITS
*************************************************************************************





500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi f3.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git add f3.txt
warning: LF will be replaced by CRLF in f3.txt.
The file will have its original line endings in your working directory

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git commit -m "Test commit 1(to check if git pushes multiple commits)"
[master 43b05cc] Test commit 1(to check if git pushes multiple commits)
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)

500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi f1.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git add --all
warning: LF will be replaced by CRLF in f1.txt.
The file will have its original line endings in your working directory

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git commit -m "Test commit 2(to check if git pushes multiple commits)"
[master 0d29819] Test commit 2(to check if git pushes multiple commits)
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git push origin master
Enumerating objects: 9, done.
Counting objects: 100% (9/9), done.
Delta compression using up to 4 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (6/6), 737 bytes | 184.00 KiB/s, done.
Total 6 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/shashwat9kumar/SK.git
   b9d8db8..0d29819  master -> master






************************************************************************
HOW TO UNSTAGE A FILE
************************************************************************








500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi f4.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        f4.txt

nothing added to commit but untracked files present (use "git add" to track)

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git add f4.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   f4.txt


500068392@upes-500068392 MINGW64 /e/SK (master)
$ git reset HEAD f4.txt
                                                                  //file unstaged
500068392@upes-500068392 MINGW64 /e/SK (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        f4.txt

nothing added to commit but untracked files present (use "git add" to track)

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git add --all

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   f4.txt


500068392@upes-500068392 MINGW64 /e/SK (master)
$ git rm --cached f4.txt                               // Another way to unstage
rm 'f4.txt'

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        f4.txt

nothing added to commit but untracked files present (use "git add" to track)

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git add f4.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git commit -m "commiting "
[master 27ccaef] commiting
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 f4.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git push origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 278 bytes | 92.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/shashwat9kumar/SK.git
   0d29819..27ccaef  master -> master






******************************************************************************
PULLING AND FETCHING FROM REMOTE REPOSITORY
******************************************************************************







500068392@upes-500068392 MINGW64 /e/SK (master)
$ git pull origin master                                  // git pull done(all commits, changes and modifications are fetched and the changes are merged with the local machine)
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/shashwat9kumar/SK
 * branch            master     -> FETCH_HEAD
   27ccaef..95acbee  master     -> origin/master
Updating 27ccaef..95acbee
Fast-forward
 f4.txt | 2 ++
 1 file changed, 2 insertions(+)

500068392@upes-500068392 MINGW64 /e/SK (master)
$ cat f4.txt                                                              // This shows that changes are fetched and merged
These changes are made on the remote repository
These changes will be pulled to the local machine

500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi f5.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git add f5.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git commit -m "commiting to fetch(fetch command used here)"
[master 057f2fa] commiting to fetch(fetch command used here)
 Committer: SHASHWAT KUMAR <500068392@DDN.UPES.AC.IN>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 f5.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git push origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 305 bytes | 152.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/shashwat9kumar/SK.git
   95acbee..057f2fa  master -> master

500068392@upes-500068392 MINGW64 /e/SK (master)
$ cat f5.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git fetch origin                                              // git fetch done here(all commits, changes and modifications are fetched BUT the changes are not merged with the local machine)
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/shashwat9kumar/SK
   057f2fa..480e02c  master     -> origin/master

500068392@upes-500068392 MINGW64 /e/SK (master)
$ cat f5.txt                                                   // this shows that the changes aren't merged

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git merge FETCH_HEAD
Already up to date.

500068392@upes-500068392 MINGW64 /e/SK (master)
$ cat f5.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git merge MERGE_HEAD
merge: MERGE_HEAD - not something we can merge

500068392@upes-500068392 MINGW64 /e/SK (master)
$ cat f5.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git pull origin master
From https://github.com/shashwat9kumar/SK
 * branch            master     -> FETCH_HEAD
Updating 057f2fa..480e02c
Fast-forward
 f5.txt | 2 ++
 1 file changed, 2 insertions(+)

500068392@upes-500068392 MINGW64 /e/SK (master)
$ cat f5.txt
The file has been edited
Now going to fetch it from the remote repository







**************************************************************************************
ADDING AND REMOVING ORIGIN(LINKS) TO REMOTE REPOSITORY
**************************************************************************************







500068392@upes-500068392 MINGW64 /e/SK (master)
$ git remote -v                                                         //command shows the repositories the local machine is linked to
origin  https://github.com/shashwat9kumar/SK.git (fetch)
origin  https://github.com/shashwat9kumar/SK.git (push)

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git remote add link https://github.com/shashwat9kumar/repo1           //Adding another remote repository and naming it "link"

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git remote -v
link    https://github.com/shashwat9kumar/repo1 (fetch)
link    https://github.com/shashwat9kumar/repo1 (push)
origin  https://github.com/shashwat9kumar/SK.git (fetch)
origin  https://github.com/shashwat9kumar/SK.git (push)

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git remote remove link                                              //removing the repository repo1 named through "link"

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git remote -v
origin  https://github.com/shashwat9kumar/SK.git (fetch)
origin  https://github.com/shashwat9kumar/SK.git (push)








*******************************************************************************
USING GIT DIFF
*******************************************************************************





500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi f4.txt                                           //changing/modifying 2 files

500068392@upes-500068392 MINGW64 /e/SK (master)
$ vi f5.txt

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   f4.txt
        modified:   f5.txt

no changes added to commit (use "git add" and/or "git commit -a")

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git diff                                                               //Using git diff to see what has been modified but not yet staged
diff --git a/f4.txt b/f4.txt
index 5aa1dec..473b230 100644
--- a/f4.txt
+++ b/f4.txt
@@ -1,2 +1,7 @@
 These changes are made on the remote repository
 These changes will be pulled to the local machine
+^M
+^M
+Now changing this file to use git diff command^M
+(file modified but not staged)^M
+
diff --git a/f5.txt b/f5.txt
index 6f496f5..5a0686d 100644
--- a/f5.txt
+++ b/f5.txt
@@ -1,2 +1,8 @@
 The file has been edited
 Now going to fetch it from the remote repository
+^M
+^M
+^M
+Modifications done to use git diff on this file^M

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git add --all                                                  //staging the modifications

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git diff --staged                                                //checking what has been staged but not yet committed
diff --git a/f4.txt b/f4.txt
index 5aa1dec..473b230 100644
--- a/f4.txt
+++ b/f4.txt
@@ -1,2 +1,7 @@
 These changes are made on the remote repository
 These changes will be pulled to the local machine
+^M
+^M
+Now changing this file to use git diff command^M
+(file modified but not staged)^M
+
diff --git a/f5.txt b/f5.txt
index 6f496f5..5a0686d 100644
--- a/f5.txt
+++ b/f5.txt
@@ -1,2 +1,8 @@
 The file has been edited
 Now going to fetch it from the remote repository
+^M
+^M
+^M
+Modifications done to use git diff on this file^M

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git log --oneline
480e02c (HEAD -> master, origin/master) Changes made, now time to fetch
057f2fa commiting to fetch(fetch command used here)
95acbee changed the file f4.txt
27ccaef commiting
0d29819 Test commit 2(to check if git pushes multiple commits)
43b05cc Test commit 1(to check if git pushes multiple commits)
b9d8db8 Changes done to fx.xls and f2.txt but git pushes only f2.txt
774c6e6 Commiting the unignored files
a880e91 Ignoring files

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git diff 057f2fa 95acbee                                     //git diff <commit number 1> <commit number 2>  to check the differences between the 2 commits
diff --git a/f5.txt b/f5.txt
deleted file mode 100644
index e69de29..0000000

500068392@upes-500068392 MINGW64 /e/SK (master)
$ git diff 0d29819 43b05cc
diff --git a/f1.txt b/f1.txt
index a149d91..8f8262e 100644
--- a/f1.txt
+++ b/f1.txt
@@ -1,3 +1,2 @@
 This is my 1st text file.
-This is my secomd indertion to this file (for Test commit 2)


500068392@upes-500068392 MINGW64 /e/SK (master)
$ git diff 480e02c                                         // git diff <commit number>  to see what changes has been made and committed wrt the just-previous commit
diff --git a/f4.txt b/f4.txt
index 5aa1dec..473b230 100644
--- a/f4.txt
+++ b/f4.txt
@@ -1,2 +1,7 @@
 These changes are made on the remote repository
 These changes will be pulled to the local machine
+^M
+^M
+Now changing this file to use git diff command^M
+(file modified but not staged)^M
+
diff --git a/f5.txt b/f5.txt
index 6f496f5..5a0686d 100644
--- a/f5.txt
+++ b/f5.txt
@@ -1,2 +1,8 @@
 The file has been edited
 Now going to fetch it from the remote repository
+^M
+^M
+^M
+Modifications done to use git diff on this file^M

